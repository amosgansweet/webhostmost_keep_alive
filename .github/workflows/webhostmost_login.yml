name: Webhostmost Login and Status Check

on:
  schedule:
    - cron: '0 0 */10 * *'  # Runs every 10 days at 00:00 UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  login_and_check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Or a more recent version

      - name: Install dependencies (Force update Puppeteer)
        run: |
          npm install puppeteer@latest cheerio
          echo "Puppeteer version: $(npm list puppeteer)" # Output Puppeteer version

      - name: Debug - Output Environment Variables
        run: |
          echo "WEBHOSTMOST_USERNAME: $WEBHOSTMOST_USERNAME"
          echo "WEBHOSTMOST_PASSWORD: $WEBHOSTMOST_PASSWORD"
        env:
          WEBHOSTMOST_USERNAME: ${{ secrets.WEBHOSTMOST_USERNAME }}
          WEBHOSTMOST_PASSWORD: ${{ secrets.WEBHOSTMOST_PASSWORD }}

      - name: Run login and status check script
        env:
          WEBHOSTMOST_USERNAME: ${{ secrets.WEBHOSTMOST_USERNAME }}
          WEBHOSTMOST_PASSWORD: ${{ secrets.WEBHOSTMOST_PASSWORD }}
        run: node webhostmost_check.js

      - name: Send Status Update (Optional - Adjust as needed)
        if: always() # Run regardless of success/failure above
        run: |
          STATUS_MESSAGE=$(cat status.txt)  # Set environment variable using shell syntax
          echo "Status Message: $STATUS_MESSAGE" #Output to test

        continue-on-error: true # Don't fail on error (e.g., if sending fails)

      - name: Send Telegram Notification
        if: always()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          STATUS_MESSAGE=$(cat status.txt) # Set environment variable using shell syntax
          if [ -n "${TELEGRAM_BOT_TOKEN}" ] && [ -n "${TELEGRAM_CHAT_ID}" ]; then
            MESSAGE="$STATUS_MESSAGE"
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d chat_id="${TELEGRAM_CHAT_ID}" \
              -d text="$MESSAGE" \
              -d disable_web_page_preview="true"
          else
            echo "Telegram bot token or chat ID not set. Skipping Telegram notification."
          fi
        continue-on-error: true

      - name: Output Status
        run: echo "$STATUS_MESSAGE"
        continue-on-error: true
